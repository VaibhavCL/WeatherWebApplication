@model WeatherWebApplication.Models.CityWeather

@{
    ViewBag.Title = "search";
}

<head>
    <style>
        body {
            background-image: url('../../Content/Images/853713_weather-hd-wallpapers_1280x1024_h.jpg');
            height: 100%;
            width: 100%;
            background-position: center;
            background-repeat: no-repeat;
            background-size: cover;
        }

        html {
            height: 100%;
        }

        .btn {
            width: 100px;
            padding: 4px;
            border-radius: 25px;
            border-color: skyblue;
            background-color: transparent;
            border-width: 3px;
            font-weight: bold;
            font-size: 16px;
            font-family: 'Lucida Grande';
        }
        #txtPlaces {
            text-align: center;
            border: 5px solid white;
            font-size: 20px;
            padding: 2px;
            position: relative;
            z-index: 4;
            border-radius: 14px;
            margin-right: -1%;
            border-color: white !important;
            padding-bottom: 4px !important;
        }
        a{
            color:black;
        }
        #city
        {
            font-size:22px
        }
    </style>
</head>

<h2>search</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>CityWeather</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @if (ViewBag.Message != null)
    {
        <div class="form-group">
            <div class="col-md-10" style="color:black;font-size:22px">@ViewBag.Message</div>
        </div>
    }
    else
    {
        <div class="form-group">
              <div class="col-md-10" style="color:red;font-size:22px;">@ViewBag.ErrorMessage</div>
       </div> 
    }

    <div class="form-group">
        @Html.LabelFor(model => model.city, htmlAttributes: new { @class = "control-label col-md-2",@id="city" })
        <div class="col-md-10">
            @*<input type="text" id="txtPlaces" style="width: 250px" placeholder="Enter a location" class="form-control">*@
            @Html.TextBoxFor(model => model.city, new { id = "txtPlaces" })
            @*@Html.EditorFor(model => model.city, new { htmlAttributes = new { @class = "form-control" } })*@
            @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
        </div>
    </div>

    <div>
        <dl class="dl-horizontal">
            <dd>
                @Html.DisplayFor(model => model.temperature)
            </dd>
        </dl>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input class="btn" type="submit" value="Create" />
            @Html.ActionLink("Back to List", "weatherApp")
        </div>
    </div>
</div>
}

<div>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        @*<div class="form-actions no-color">
                <input class="btn" type="submit" value="Create" class="btn btn-default" /> |
                @Html.ActionLink("Back to List", "weatherApp")
            </div>*@
    }
    @*@Html.ActionLink("Back to List", "weatherApp")*@
</div>

<form>
    <script src="http://code.jquery.com/jquery-1.10.2.js"></script>
    <script src="http://code.jquery.com/ui/1.11.2/jquery-ui.js"></script>
    <script src="http://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>

    <script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?key=AIzaSyAGF8cAOPFPIKCZYqxuibF9xx5XD4JBb84&sensor=false&libraries=places"></script>
    <script type="text/javascript">

        google.maps.event.addDomListener(window, 'load', function () {
            var places = new google.maps.places.Autocomplete(document.getElementById('txtPlaces'));
            google.maps.event.addListener(places, 'place_changed', function () {
                var place = places.getPlace();
                var address = place.formatted_address;
                var latitude = place.geometry.location.A;
                var longitude = place.geometry.location.F;
                var mesg = "Address: " + address;
                mesg += "\nLatitude: " + latitude;
                mesg += "\nLongitude: " + longitude;
            });
        });

    </script>
 </form>
